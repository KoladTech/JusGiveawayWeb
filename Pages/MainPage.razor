@page "/mainpage/{PlayerName}"
@using static JusGiveawayWebApp.Pages.CustomAlertDialog
@using JusGiveawayWebApp.Helpers
@inject NavigationManager NavigationManager
@using static JusGiveawayWebApp.Helpers.CommonFunctions
@inject IndexedDB.Blazor.IIndexedDbFactory DbFactory
@using JusGiveawayWebApp.Models
@inject JusGiveawayWebApp.Helpers.CommonFunctions CommonFunctions

<div class="phone-container">
    <div class="phone-screen">
        <!-- Top section with avatar and greeting -->
        <div class="top-section">
            <div class="avatar-container">
                <img src="images/avatar_green.png" class="avatar-image" />
                <div class="player-info">
                    <span>Hello @PlayerName</span>
                </div>
            </div>
        </div>

        <!-- Games label -->
        <h2 class="games-title">Games</h2>

        <!-- Game selection grid -->
        <div class="games-grid">
            <!-- First row -->
            <div class="game-card">
                <img src="images/info_icon.png" class="info-icon" alt="Info Icon" @onclick="ShowHeadsOrTailsInstructions" style="cursor: pointer;" />
                <img src="images/kobo_front.png" class="game-image" />
                <span class="game-label">Heads Or Tails</span>
                <button @onclick="PlayHeadsOrTailsGame" class="play-button">Play</button>
            </div>

            <div class="game-card">
                <img src="images/info_icon.png" class="info-icon" alt="Info Icon" @onclick="ShowHeadsOrTailsInstructions" style="cursor: pointer;" />
                <img src="images/question_mark.png" class="game-image" />
                <span class="game-label">Coming Soon</span>
                <button class="play-button" disabled>Play</button>
            </div>

            <!-- Second row -->
            <div class="game-card">
                <img src="images/info_icon.png" class="info-icon" alt="Info Icon" @onclick="ShowHeadsOrTailsInstructions" style="cursor: pointer;" />
                <img src="images/question_mark.png" class="game-image" />
                <span class="game-label">Coming Soon</span>
                <button class="play-button" disabled>Play</button>
            </div>

            <div class="game-card">
                <img src="images/info_icon.png" class="info-icon" alt="Info Icon" @onclick="ShowHeadsOrTailsInstructions" style="cursor: pointer;" />
                <img src="images/question_mark.png" class="game-image" />
                <span class="game-label">Coming Soon</span>
                <button class="play-button" disabled>Play</button>
            </div>
        </div>

        <!-- Logout button -->
        <button @onclick="Logout" class="logout-button">
            <img src="images/logout_icon.png" class="logout-icon" />
        </button>

        <!-- Loading indicator (hidden initially) -->
        @if (isLoading)
        {
            <div class="loading-indicator">
                <span>Loading...</span>
            </div>
        }
    </div>
</div>

<CustomAlertDialog ShowDialog ="@ShowDialog" DialogParams ="@alertDialogParams"/>

@code {
    // Bindable properties and variables
    [Parameter]
    public string PlayerName { get; set; } = "Player";

    private bool isLoading = false;
    private bool ShowDialog = false;
    private AlertDialogParams alertDialogParams = new AlertDialogParams();

    // protected override async Task OnInitializedAsync()
    // {
    //     try
    //     {
            
    //         using (var db = await this.DbFactory.Create<JusGiveawayDB>())
    //         {
    //             var existingUser = db.UserInfo.FirstOrDefault(u => u.UID == uid);

    //             if (existingUser == null)
    //             {
    //                 //if not in indexeddb that means browser data was cleared
    //                 //or a new computer/phone/machine is being logged into
    //                 //so we will retrieve data from firebase to now store in indexeddb
    //                 string usersName = await CommonFunctions.GetUsersNameFromFirebase(uid);

    //                 db.UserInfo.Add(new UserInfo()
    //                     {
    //                         UID = uid,
    //                         Name = usersName,
    //                         PhoneNumber = null,
    //                         EmailAddress = email
    //                     });
    //                 await db.SaveChanges();
    //             }
    //         }
    //     }
    //     catch (Exception ex)
    //     {
    //         Console.WriteLine(ex.Message);
    //     }
    // }

    // Event handlers
    private void ShowHeadsOrTailsInstructions()
    {
        // Handle instructions button click for Heads or Tails
    }

    private void PlayHeadsOrTailsGame()
    {
        // Handle play button click for Heads or Tails
    }

    private void ShowComingSoonInstructions()
    {
        // Handle instructions button click for coming soon games
    }

    private void Logout()
    {
        ShowDialog = true;
        alertDialogParams.AlertTitle = "Sign out?";
        alertDialogParams.AlertMessage = new MarkupString("Are you sure you want to sign out?");
        alertDialogParams.OnPrimaryButtonClick = EventCallback.Factory.Create(this, AlertDialogPrimaryClicked);
        alertDialogParams.OnSecondaryButtonClick = EventCallback.Factory.Create(this, AlertDialogSecondaryClicked);
    }

    private void AlertDialogPrimaryClicked()
    {
        ShowDialog = false;
        NavigationManager.NavigateTo("/signin");
    }

    private void AlertDialogSecondaryClicked()
    {
        ShowDialog = false;
    }
}
